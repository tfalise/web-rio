name: CI/CD

on:
  push:
    branches:
      - master

# needs
# - generate docker image with proper tag
# deploy to dev
# deploy to prod

env:
  TFM_STORAGE_NAME: ${{ secrets.TFM_STORAGE_NAME }}
  TFM_CONTAINER_NAME: ${{ secrets.TFM_CONTAINER_NAME }}
  TFM_STATE_BLOB_NAME: ${{ secrets.TFM_STATE_BLOB_NAME }}
  TFM_ACCESS_KEY: ${{ secrets.TFM_ACCESS_KEY }}

permissions:
  id-token: write
  contents: read

jobs:
    Build:
        runs-on: ubuntu-latest
        environment: dev
        steps:
            - name: Check out repository code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Install GitVersion
              uses: gittools/actions/gitversion/setup@v3.0.3
            - name: Determine version
              id: gitversion
              uses: gittools/actions/gitversion/execute@v3.0.3
            - name: Set up Docker buildx
              uses: docker/setup-buildx-action@v3.7.1
            - name: Azure login
              uses: azure/login@v2
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2
            - name: Publish image
              uses: azure/cli@v2
              with:
                azcliversion: latest
                inlineScript: |
                  az acr build --registry acrwebriodev --image tfalise/webrio:${{ steps.gitversion.outputs.shortSha }} --file src/app/Dockerfile src/app/
            - name: Init Terraform (webapp)
              working-directory: src/iac/webapp/
              run: | 
                terraform init \
                  -backend-config="storage_account_name=$TFM_STORAGE_NAME" \
                  -backend-config="access_key=$TFM_ACCESS_KEY" \
                  -backend-config="container_name=$TFM_CONTAINER_NAME" \
                  -backend-config="key=$TFM_STATE_BLOB_NAME"
            - name: Apply Terraform (webapp)
              working-directory: src/iac/webapp/
              run: |
                terraform apply -auto-approve
                  -var="docker-version=${{ steps.gitversion.outputs.shortSha }}"

                  